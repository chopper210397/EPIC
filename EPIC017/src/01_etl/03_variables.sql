@&1

SET ECHO ON
WHENEVER SQLERROR EXIT SQL.SQLCODE
ALTER SESSION DISABLE PARALLEL QUERY;

VAR INTERVALO_1 NUMBER
EXEC :INTERVALO_1 := TO_NUMBER(&2);
VAR INTERVALO_2 NUMBER
EXEC :INTERVALO_2 := TO_NUMBER(&3);

VAR INTERVALO_3 NUMBER
EXEC :INTERVALO_3 := TO_NUMBER(&4);
VAR INTERVALO_4 NUMBER
EXEC :INTERVALO_4 := TO_NUMBER(&5);

SELECT :INTERVALO_1, :INTERVALO_2, :INTERVALO_3, :INTERVALO_4 FROM DUAL;

--EDAD
--DROP TABLE TMP_ESCPEP_EDAD;
--CREATE TABLE TMP_ESCPEP_EDAD TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_EDAD;
INSERT INTO TMP_ESCPEP_EDAD
WITH TMP_ESCPEP_EDAD_AUX AS
( SELECT A.CODCLAVECIC,TRUNC(ADD_MONTHS(SYSDATE,0)) AS FECHAACTUAL,B.FECNACIMIENTO, FLOOR(MONTHS_BETWEEN(SYSDATE, B.FECNACIMIENTO) /12) AS EDAD
  FROM TMP_ESCPEP_UNIVERSO A
  LEFT JOIN ODS_V.MD_PERSONANATURAL B ON A.CODCLAVECIC = B.CODCLAVECIC
) SELECT A.*, B.EDAD
  FROM TMP_ESCPEP_UNIVERSO A
  LEFT JOIN TMP_ESCPEP_EDAD_AUX B ON A.CODCLAVECIC = B.CODCLAVECIC;

--ANTIGUEDAD CLIENTE

--DROP TABLE TMP_ESCPEP_FECAPERTURA;
--CREATE TABLE TMP_ESCPEP_FECAPERTURA TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_FECAPERTURA;
INSERT INTO TMP_ESCPEP_FECAPERTURA
SELECT CODCLAVECIC,MIN(T.FECAPERTURA) AS FECAPERTURA
FROM ( SELECT DISTINCT CODCLAVECIC,FECAPERTURA FROM ODS_V.MD_PRESTAMO WHERE FLGREGELIMINADO = 'N'
       UNION ALL
       SELECT DISTINCT CODCLAVECIC,FECAPERTURA FROM ODS_V.MD_IMPAC WHERE FLGREGELIMINADO = 'N'
       UNION ALL
       SELECT DISTINCT CODCLAVECIC,FECAPERTURA FROM ODS_V.MD_SAVING WHERE FLGREGELIMINADO = 'N'
       UNION ALL
       SELECT DISTINCT CODCLAVECIC,FECAPERTURA FROM ODS_V.MD_CUENTAVP WHERE FLGREGELIMINADO = 'N')  T
GROUP BY CODCLAVECIC;

--DROP TABLE TMP_ESCPEP_ANTIGUEDADCLIENTE;
--CREATE TABLE TMP_ESCPEP_ANTIGUEDADCLIENTE TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_ANTIGUEDADCLIENTE;
INSERT INTO TMP_ESCPEP_ANTIGUEDADCLIENTE
WITH TMP_ESCPEP_ANTIGUEDADCLIENTE_AUX AS
( SELECT A.CODCLAVECIC,TRUNC(ADD_MONTHS(SYSDATE,0)) AS FECHAACTUAL,B.FECAPERTURA, FLOOR(MONTHS_BETWEEN(SYSDATE, B.FECAPERTURA)) AS ANTIGUEDADCLIENTE
  FROM TMP_ESCPEP_EDAD A
  LEFT JOIN TMP_ESCPEP_FECAPERTURA B ON A.CODCLAVECIC = B.CODCLAVECIC
) SELECT A.*, B.ANTIGUEDADCLIENTE
  FROM TMP_ESCPEP_EDAD A
  LEFT JOIN TMP_ESCPEP_ANTIGUEDADCLIENTE_AUX B ON A.CODCLAVECIC = B.CODCLAVECIC;

--VARIABLES SAPYC: NP - 2

--DROP TABLE TMP_ESCPEP_NP_AUX2;
--CREATE TABLE TMP_ESCPEP_NP_AUX2 TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_NP_AUX2;
INSERT INTO TMP_ESCPEP_NP_AUX2
SELECT TRIM(A.CODUNICOCLI) AS CODUNICOCLI, COUNT(*) AS CTDNP
FROM S61751.SAPY_DMALERTA A
     INNER JOIN S61751.SAPY_DMEVALUACION E ON A.IDCASO = E.IDCASO
WHERE A.IDORIGEN = 2
GROUP BY TRIM(A.CODUNICOCLI);

--DROP TABLE TMP_ESCPEP_NP;
--CREATE TABLE TMP_ESCPEP_NP TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_NP;
INSERT INTO TMP_ESCPEP_NP
SELECT A.*, CASE WHEN B.CTDNP IS NOT NULL THEN 1 ELSE 0 END FLGNP,CASE WHEN B.CTDNP IS NOT NULL THEN B.CTDNP ELSE 0 END CTDNP
FROM TMP_ESCPEP_ANTIGUEDADCLIENTE A
LEFT JOIN ODS_V.MD_CLIENTEG94 X ON A.CODCLAVECIC = X.CODCLAVECIC
LEFT JOIN TMP_ESCPEP_NP_AUX2 B ON TRIM(X.CODUNICOCLI) = TRIM(B.CODUNICOCLI);

--VARIABLES SAPYC: LSB - 29

--DROP TABLE TMP_ESCPEP_LSB_AUX2;
--CREATE TABLE TMP_ESCPEP_LSB_AUX2 TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_LSB_AUX2;
INSERT INTO TMP_ESCPEP_LSB_AUX2
SELECT TRIM(A.CODUNICOCLI) AS CODUNICOCLI, COUNT(*) AS CTDLSB
FROM S61751.SAPY_DMALERTA A
     INNER JOIN S61751.SAPY_DMEVALUACION E ON A.IDCASO = E.IDCASO
WHERE A.IDORIGEN = 29
GROUP BY TRIM(A.CODUNICOCLI);

--DROP TABLE TMP_ESCPEP_LSB;
--CREATE TABLE TMP_ESCPEP_LSB TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_LSB;
INSERT INTO TMP_ESCPEP_LSB
SELECT A.*, CASE WHEN B.CTDLSB IS NOT NULL THEN 1 ELSE 0 END FLGLSB,CASE WHEN B.CTDLSB IS NOT NULL THEN B.CTDLSB ELSE 0 END CTDLSB
FROM TMP_ESCPEP_NP A
LEFT JOIN ODS_V.MD_CLIENTEG94 X ON A.CODCLAVECIC = X.CODCLAVECIC
LEFT JOIN TMP_ESCPEP_LSB_AUX2 B ON TRIM(X.CODUNICOCLI) = TRIM(B.CODUNICOCLI);

--VARIABLES SAPYC: NRO EVALUACIONES, INVESTIGACIONES Y ROS

--DROP TABLE TMP_ESCPEP_SAPYC;
--CREATE TABLE TMP_ESCPEP_SAPYC TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_SAPYC;
INSERT INTO TMP_ESCPEP_SAPYC
SELECT E.IDCASO, E.CODUNICOCLI, E.IDRESULTADO AS IDRESULTADOEVAL, I.IDRESULTADOSUPERVISOR
FROM S61751.SAPY_DMEVALUACION E
     LEFT JOIN S61751.SAPY_DMINVESTIGACION I ON E.IDCASO = I.IDCASO;

--DROP TABLE TMP_ESCPEP_EVALS;
--CREATE TABLE TMP_ESCPEP_EVALS TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_EVALS;
INSERT INTO TMP_ESCPEP_EVALS
WITH TMP_ESCPEP_EVALS_AUX AS
(
  SELECT A.CODCLAVECIC, COUNT(*) AS CTDEVALS
  FROM TMP_ESCPEP_LSB A
  LEFT JOIN ODS_V.MD_CLIENTEG94 X ON A.CODCLAVECIC = X.CODCLAVECIC
  LEFT JOIN TMP_ESCPEP_SAPYC B ON TRIM(X.CODUNICOCLI) = TRIM(B.CODUNICOCLI)
  WHERE IDRESULTADOEVAL <> 7
  GROUP BY A.CODCLAVECIC
),
TMP_ESCPEP_EVALS_FP_AUX AS
(
  SELECT A.CODCLAVECIC, COUNT(*) AS CTDEVALS_FP
  FROM TMP_ESCPEP_LSB A
  LEFT JOIN ODS_V.MD_CLIENTEG94 X ON A.CODCLAVECIC = X.CODCLAVECIC
  LEFT JOIN TMP_ESCPEP_SAPYC B ON TRIM(X.CODUNICOCLI) = TRIM(B.CODUNICOCLI)
  WHERE IDRESULTADOEVAL IN (5,6)
  GROUP BY A.CODCLAVECIC
)
  SELECT A.*,
  CASE WHEN B.CTDEVALS IS NOT NULL THEN B.CTDEVALS ELSE 0 END AS CTDEVALS,
  CASE WHEN C.CTDEVALS_FP IS NOT NULL THEN C.CTDEVALS_FP ELSE 0 END AS CTDEVALS_FP
  FROM TMP_ESCPEP_LSB A
  LEFT JOIN TMP_ESCPEP_EVALS_AUX B ON A.CODCLAVECIC = B.CODCLAVECIC
  LEFT JOIN TMP_ESCPEP_EVALS_FP_AUX C ON A.CODCLAVECIC = C.CODCLAVECIC;

--DROP TABLE TMP_ESCPEP_INVS;
--CREATE TABLE TMP_ESCPEP_INVS TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_INVS;
INSERT INTO TMP_ESCPEP_INVS
WITH TMP_ESCPEP_INVS_AUX AS
(
  SELECT A.CODCLAVECIC, COUNT(*) AS CTDINVS
  FROM TMP_ESCPEP_EVALS A
  LEFT JOIN ODS_V.MD_CLIENTEG94 X ON A.CODCLAVECIC = X.CODCLAVECIC
  LEFT JOIN TMP_ESCPEP_SAPYC B ON TRIM(X.CODUNICOCLI) = TRIM(B.CODUNICOCLI)
  WHERE IDRESULTADOEVAL = 7
  GROUP BY A.CODCLAVECIC
) SELECT A.*, CASE WHEN B.CTDINVS IS NOT NULL THEN B.CTDINVS ELSE 0 END AS CTDINVS
  FROM TMP_ESCPEP_EVALS A
  LEFT JOIN TMP_ESCPEP_INVS_AUX B ON A.CODCLAVECIC = B.CODCLAVECIC;

--DROP TABLE TMP_ESCPEP_ROS;
--CREATE TABLE TMP_ESCPEP_ROS TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_ROS;
INSERT INTO TMP_ESCPEP_ROS
WITH TMP_ESCPEP_ROS_AUX AS
(
  SELECT A.CODCLAVECIC, COUNT(*) AS CTDROS
  FROM TMP_ESCPEP_INVS A
  LEFT JOIN ODS_V.MD_CLIENTEG94 X ON A.CODCLAVECIC = X.CODCLAVECIC
  LEFT JOIN TMP_ESCPEP_SAPYC B ON TRIM(X.CODUNICOCLI) = TRIM(B.CODUNICOCLI)
  WHERE IDRESULTADOSUPERVISOR = 2
  GROUP BY A.CODCLAVECIC
) SELECT A.*, CASE WHEN B.CTDROS IS NOT NULL THEN B.CTDROS ELSE 0 END AS CTDROS
  FROM TMP_ESCPEP_INVS A
  LEFT JOIN TMP_ESCPEP_ROS_AUX B ON A.CODCLAVECIC = B.CODCLAVECIC;

--FLAG SI CLIENTE ESTA EN ARCHIVO NEGATIVO

--DROP TABLE TMP_ESCPEP_ARCHIVONEGATIVO;
--CREATE TABLE TMP_ESCPEP_ARCHIVONEGATIVO TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_ARCHIVONEGATIVO;
INSERT INTO TMP_ESCPEP_ARCHIVONEGATIVO
WITH TMP_ESCPEP_ARCHIVONEGATIVO_AUX AS (
  SELECT DISTINCT A.CODCLAVECIC, MAX(B.DESTIPMOTIVONEGATIVO) AS DESTIPMOTIVONEGATIVO
  FROM ODS_V.MD_MOTIVODETALLECLINEGATIVO A
  LEFT JOIN ODS_V.MD_DESTIPOMOTIVONEGATIVO B ON A.TIPMOTIVONEGATIVO = B.TIPMOTIVONEGATIVO
  INNER JOIN (
        SELECT CODCLAVECIC, MAX(FECREGISTRODETALLENEGATIVO) AS MAXFECREGISTRODETALLENEGATIVO
        FROM ODS_V.MD_MOTIVODETALLECLINEGATIVO
        GROUP BY CODCLAVECIC
  ) C ON A.CODCLAVECIC = C.CODCLAVECIC AND A.FECREGISTRODETALLENEGATIVO = C.MAXFECREGISTRODETALLENEGATIVO
  WHERE A.FLGHISTORICO = 'N'
  GROUP BY A.CODCLAVECIC
) SELECT A.*,
  CASE WHEN B.CODCLAVECIC IS NOT NULL THEN 1 ELSE 0 END AS FLGARCHIVONEGATIVO,
  B.DESTIPMOTIVONEGATIVO AS DESTIPMOTIVONEGATIVO
  FROM TMP_ESCPEP_ROS A
  LEFT JOIN TMP_ESCPEP_ARCHIVONEGATIVO_AUX B ON A.CODCLAVECIC = B.CODCLAVECIC;

--LUGAR DE RESIDENCIA

--DROP TABLE TMP_ESCPEP_LUGARRESIDENCIA_AUX2;
--CREATE TABLE TMP_ESCPEP_LUGARRESIDENCIA_AUX2 TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_LUGARRESIDENCIA_AUX2;
INSERT INTO TMP_ESCPEP_LUGARRESIDENCIA_AUX2
WITH TMP_ESCPEP_LUGARRESIDENCIA_AUX AS (
  SELECT CODCLAVECIC,MAX(NUMDIR) AS MAXNUMDIR
  FROM ODS_V.MM_DIRECCIONCLIENTE
  WHERE
  TIPDIR IN ('D')
  GROUP BY CODCLAVECIC
) SELECT  B.CODCLAVECIC, B.NUMDIR, B.TIPDIR, C.CODUBIGEO, B.CODDISTRITO, C.DESCODDISTRITO, C.CODPROVINCIA, D.DESCODPROVINCIA, D.CODDEPARTAMENTO, E.DESCODDEPARTAMENTO
  FROM TMP_ESCPEP_ARCHIVONEGATIVO A
  LEFT JOIN ODS_V.MM_DIRECCIONCLIENTE B ON A.CODCLAVECIC = B.CODCLAVECIC
  INNER JOIN TMP_ESCPEP_LUGARRESIDENCIA_AUX X ON B.CODCLAVECIC = X.CODCLAVECIC AND B.NUMDIR = X.MAXNUMDIR
  LEFT JOIN ODS_V.MM_DISTRITO C ON B.CODDISTRITO = C.CODDISTRITO
  LEFT JOIN ODS_V.MM_PROVINCIA D ON C.CODPROVINCIA = D.CODPROVINCIA
  LEFT JOIN ODS_V.MM_DEPARTAMENTO E ON D.CODDEPARTAMENTO = E.CODDEPARTAMENTO;

--DROP TABLE TMP_ESCPEP_LUGARRESIDENCIA;
--CREATE TABLE TMP_ESCPEP_LUGARRESIDENCIA TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_LUGARRESIDENCIA;
INSERT INTO TMP_ESCPEP_LUGARRESIDENCIA
SELECT A.*, B.NUMDIR, B.TIPDIR, B.CODUBIGEO, B.CODDISTRITO, B.DESCODDISTRITO, B.CODPROVINCIA, B.DESCODPROVINCIA, B.CODDEPARTAMENTO, B.DESCODDEPARTAMENTO
FROM TMP_ESCPEP_ARCHIVONEGATIVO A
LEFT JOIN TMP_ESCPEP_LUGARRESIDENCIA_AUX2 B ON A.CODCLAVECIC = B.CODCLAVECIC;

--NRO DE CUENTAS RECIENTES

--DROP TABLE TMP_ESCPEP_CTASNUEVAS_AUX;
--CREATE TABLE TMP_ESCPEP_CTASNUEVAS_AUX TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_CTASNUEVAS_AUX;
INSERT INTO TMP_ESCPEP_CTASNUEVAS_AUX
SELECT A.CODCLAVEOPECTA,A.CODCLAVECIC,A.FECAPERTURA, CASE WHEN MONTHS_BETWEEN(SYSDATE,A.FECAPERTURA) < 12 THEN 1 ELSE 0 END AS CTA_RECIENTE
FROM ODS_V.MD_SAVING A
INNER JOIN TMP_ESCPEP_UNIVERSO B ON A.CODCLAVECIC = B.CODCLAVECIC
WHERE A.FLGREGELIMINADO = 'N'
UNION ALL
SELECT A.CODCLAVEOPECTA,A.CODCLAVECIC,A.FECAPERTURA, CASE WHEN MONTHS_BETWEEN(SYSDATE,A.FECAPERTURA) < 12 THEN 1 ELSE 0 END AS CTA_RECIENTE
FROM ODS_V.MD_IMPAC A
INNER JOIN TMP_ESCPEP_UNIVERSO B ON A.CODCLAVECIC = B.CODCLAVECIC
WHERE A.FLGREGELIMINADO = 'N';

--DROP TABLE TMP_ESCPEP_CTASNUEVAS;
--CREATE TABLE TMP_ESCPEP_CTASNUEVAS TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_CTASNUEVAS;
INSERT INTO TMP_ESCPEP_CTASNUEVAS
WITH TMP_CTD_CTAS_REC AS (
  SELECT CODCLAVECIC, SUM(CASE WHEN CTA_RECIENTE = 1 THEN 1 ELSE 0 END) AS CTD_CTAS_NUEVAS
  FROM  TMP_ESCPEP_CTASNUEVAS_AUX
  GROUP BY CODCLAVECIC
) SELECT A.*,
  CASE WHEN B.CODCLAVECIC IS NOT NULL THEN B.CTD_CTAS_NUEVAS ELSE 0 END AS CTD_CTAS_NUEVAS
  FROM TMP_ESCPEP_LUGARRESIDENCIA A
  LEFT JOIN TMP_CTD_CTAS_REC B ON A.CODCLAVECIC = B.CODCLAVECIC;

----------------------------------------------
--VARIABLES POR TRX---------------------------
----------------------------------------------

--DROP TABLE TMP_ESCPEP_SOLICITANTES;
--CREATE TABLE TMP_ESCPEP_SOLICITANTES TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_SOLICITANTES;
INSERT INTO TMP_ESCPEP_SOLICITANTES
SELECT DISTINCT CODCLAVECICSOURCE AS CODCLAVECIC
FROM TMP_ESCPEP_TRXS A
WHERE TIPOINGRESOEGRESO = 'ING' AND CODCLAVECICSOURCE <> -1;

--DROP TABLE TMP_ESCPEP_SOL_NP;
--CREATE TABLE TMP_ESCPEP_SOL_NP TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_SOL_NP;
INSERT INTO TMP_ESCPEP_SOL_NP
SELECT A.CODCLAVECIC, CASE WHEN B.CTDNP IS NOT NULL THEN 1 ELSE 0 END FLGNP_SOL
FROM TMP_ESCPEP_SOLICITANTES A
INNER JOIN  ODS_V.MD_CLIENTEG94 X ON A.CODCLAVECIC = X.CODCLAVECIC
LEFT JOIN TMP_ESCPEP_NP_AUX2 B ON TRIM(X.CODUNICOCLI) = TRIM(B.CODUNICOCLI);

--DROP TABLE TMP_ESCPEP_SOL_LSB;
--CREATE TABLE TMP_ESCPEP_SOL_LSB TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_SOL_LSB;
INSERT INTO TMP_ESCPEP_SOL_LSB
SELECT A.*, CASE WHEN B.CTDLSB IS NOT NULL THEN 1 ELSE 0 END FLGLSB_SOL
FROM TMP_ESCPEP_SOLICITANTES A
INNER JOIN ODS_V.MD_CLIENTEG94 X ON A.CODCLAVECIC = X.CODCLAVECIC
LEFT JOIN TMP_ESCPEP_LSB_AUX2 B ON TRIM(X.CODUNICOCLI) = TRIM(B.CODUNICOCLI);

--FLAG SI SOLICITANTE/ORDENANTE ESTA EN ARCHIVO NEGATIVO

--DROP TABLE TMP_ESCPEP_SOL_ARCHIVONEGATIVO;
--CREATE TABLE TMP_ESCPEP_SOL_ARCHIVONEGATIVO TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_SOL_ARCHIVONEGATIVO;
INSERT INTO TMP_ESCPEP_SOL_ARCHIVONEGATIVO
WITH TMP_ESCPEP_ARCHIVONEGATIVO_AUX AS (
  SELECT DISTINCT A.CODCLAVECIC, MAX(B.DESTIPMOTIVONEGATIVO) AS DESTIPMOTIVONEGATIVO
  FROM ODS_V.MD_MOTIVODETALLECLINEGATIVO A
  LEFT JOIN ODS_V.MD_DESTIPOMOTIVONEGATIVO B ON A.TIPMOTIVONEGATIVO = B.TIPMOTIVONEGATIVO
  INNER JOIN (
        SELECT CODCLAVECIC, MAX(FECREGISTRODETALLENEGATIVO) AS MAXFECREGISTRODETALLENEGATIVO
        FROM ODS_V.MD_MOTIVODETALLECLINEGATIVO
        GROUP BY CODCLAVECIC
  ) C ON A.CODCLAVECIC = C.CODCLAVECIC AND A.FECREGISTRODETALLENEGATIVO = C.MAXFECREGISTRODETALLENEGATIVO
  WHERE A.FLGHISTORICO = 'N'
  GROUP BY A.CODCLAVECIC
) SELECT A.*,
  CASE WHEN B.CODCLAVECIC IS NOT NULL THEN 1 ELSE 0 END AS FLGARCHIVONEGATIVO_SOL,
  B.DESTIPMOTIVONEGATIVO AS DESTIPMOTIVONEGATIVO
  FROM TMP_ESCPEP_SOLICITANTES A
  LEFT JOIN TMP_ESCPEP_ARCHIVONEGATIVO_AUX B ON A.CODCLAVECIC = B.CODCLAVECIC;

--DROP TABLE TMP_ESCPEP_SOL_VARIABLES;
--CREATE TABLE TMP_ESCPEP_SOL_VARIABLES TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_SOL_VARIABLES;
INSERT INTO TMP_ESCPEP_SOL_VARIABLES
SELECT A.*, B.FLGLSB_SOL, C.FLGARCHIVONEGATIVO_SOL
FROM TMP_ESCPEP_SOL_NP A
LEFT JOIN TMP_ESCPEP_SOL_LSB B ON A.CODCLAVECIC = B.CODCLAVECIC
LEFT JOIN TMP_ESCPEP_SOL_ARCHIVONEGATIVO C ON A.CODCLAVECIC = C.CODCLAVECIC;

--RELACIONADOS DEL UNIVERSO DE PEPS

--DROP TABLE TMP_ESCPEP_RELACIONADOS_A_PEP;
--CREATE TABLE TMP_ESCPEP_RELACIONADOS_A_PEP TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_RELACIONADOS_A_PEP;
INSERT INTO TMP_ESCPEP_RELACIONADOS_A_PEP
WITH TMP_REL AS (
     SELECT A.CODCLAVECIC, A.CODCLAVECICCLIREL, A.CODTIPREL, C.DESCODTIPREL
     FROM ODS_V.MD_RELACIONCLIENTE A
     INNER JOIN (
            SELECT CODCLAVECIC,CODCLAVECICCLIREL,MAX(NUMREL) AS MAXNUMREL,MAX(FECINICIOREL) AS MAXFECINICIOREL,MIN(CODTIPREL) AS MINCODTIPREL
            FROM ODS_V.MD_RELACIONCLIENTE
            WHERE FLGVIGENCIAREL = 'S'
            GROUP BY CODCLAVECIC, CODCLAVECICCLIREL
     ) B ON A.CODCLAVECIC = B.CODCLAVECIC AND A.CODCLAVECICCLIREL = B.CODCLAVECICCLIREL AND A.NUMREL = B.MAXNUMREL AND A.FECINICIOREL = B.MAXFECINICIOREL AND A.CODTIPREL = B.MINCODTIPREL
     INNER JOIN ODS_V.MM_DESCODTIPORELACIONCLIENTE C ON TRIM(A.CODTIPREL) = TRIM(C.CODTIPREL)
     WHERE A.FLGVIGENCIAREL = 'S'
)
SELECT A.CODCLAVECIC, A.CODCLAVECICCLIREL, A.CODTIPREL, A.DESCODTIPREL
FROM TMP_REL A
INNER JOIN TMP_ESCPEP_UNIVERSO B ON A.CODCLAVECIC = B.CODCLAVECIC;

--VARIABLES SAPYC: NP - 2 O LSB - 29 DEL RELACIONADO

--DROP TABLE TMP_ESCPEP_REL_NPLSB;
--CREATE TABLE TMP_ESCPEP_REL_NPLSB TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_REL_NPLSB;
INSERT INTO TMP_ESCPEP_REL_NPLSB
WITH TMP_REL_NP AS (
  SELECT A.CODCLAVECICCLIREL AS CODCLAVECIC, CASE WHEN B.CTDNP IS NOT NULL THEN 1 ELSE 0 END FLGNP_SOLREL
  FROM (SELECT DISTINCT CODCLAVECICCLIREL FROM TMP_ESCPEP_RELACIONADOS_A_PEP) A
  INNER JOIN  ODS_V.MD_CLIENTEG94 X ON A.CODCLAVECICCLIREL = X.CODCLAVECIC
  LEFT JOIN TMP_ESCPEP_NP_AUX2 B ON TRIM(X.CODUNICOCLI) = TRIM(B.CODUNICOCLI)
),
TMP_REL_LSB AS (
  SELECT A.CODCLAVECICCLIREL AS CODCLAVECIC, CASE WHEN B.CTDLSB IS NOT NULL THEN 1 ELSE 0 END FLGLSB_SOLREL
  FROM (SELECT DISTINCT CODCLAVECICCLIREL FROM TMP_ESCPEP_RELACIONADOS_A_PEP) A
  INNER JOIN ODS_V.MD_CLIENTEG94 X ON A.CODCLAVECICCLIREL = X.CODCLAVECIC
  LEFT JOIN TMP_ESCPEP_LSB_AUX2 B ON TRIM(X.CODUNICOCLI) = TRIM(B.CODUNICOCLI)
) SELECT A.CODCLAVECIC,
  A.FLGNP_SOLREL, B.FLGLSB_SOLREL,
  CASE WHEN A.FLGNP_SOLREL = 1 OR B.FLGLSB_SOLREL = 1 THEN 1 ELSE 0 END FLG_NPLSB_REL
  FROM TMP_REL_NP A
  LEFT JOIN TMP_REL_LSB B ON A.CODCLAVECIC = B.CODCLAVECIC;

--MODIFICACION DE LA TABLA DE TRANSACCIONES

--DROP TABLE TMP_ESCPEP_TRXS_CON_MAS_VARS;
--CREATE TABLE TMP_ESCPEP_TRXS_CON_MAS_VARS TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_TRXS_CON_MAS_VARS;
INSERT INTO TMP_ESCPEP_TRXS_CON_MAS_VARS
SELECT DISTINCT A.*,
CASE WHEN C.CODCLAVECIC IS NOT NULL AND TIPOINGRESOEGRESO = 'ING' THEN C.FLGNP_SOL ELSE 0 END AS FLGNP_SOL,
CASE WHEN C.CODCLAVECIC IS NOT NULL AND TIPOINGRESOEGRESO = 'ING' THEN C.FLGLSB_SOL ELSE 0 END AS FLGLSB_SOL,
CASE WHEN C.CODCLAVECIC IS NOT NULL AND TIPOINGRESOEGRESO = 'ING' THEN C.FLGARCHIVONEGATIVO_SOL ELSE 0 END AS FLGARCHIVONEGATIVO_SOL,
CASE WHEN B.CODCLAVECIC IS NULL AND B.CODCLAVECICCLIREL IS NULL  THEN 1 ELSE 0 END AS FLGSOL_NOREL,
CASE WHEN B.CODCLAVECIC IS NOT NULL AND B.CODCLAVECICCLIREL IS NOT NULL AND CODTIPREL IN ('EM','AC') THEN 1 ELSE 0 END AS FLGSOL_EMPREL,
CASE WHEN A.MTODOLARIZADO > 10000 AND TIPOINGRESOEGRESO = 'ING' THEN 1 ELSE 0 END AS FLG_MTO_MAYOR_10K,
CASE WHEN D.CODCLAVECIC IS NOT NULL AND TIPOINGRESOEGRESO = 'ING' THEN D.FLG_NPLSB_REL ELSE 0 END AS FLGSOL_NPLSB_REL
FROM TMP_ESCPEP_TRXS A
LEFT JOIN TMP_ESCPEP_RELACIONADOS_A_PEP B ON A.CODCLAVECICTARGET = B.CODCLAVECIC AND A.CODCLAVECICSOURCE = B.CODCLAVECICCLIREL
LEFT JOIN TMP_ESCPEP_SOL_VARIABLES C ON A.CODCLAVECICSOURCE = C.CODCLAVECIC
LEFT JOIN TMP_ESCPEP_REL_NPLSB D ON A.CODCLAVECICSOURCE = D.CODCLAVECIC;

--VARIABLES TRANSACCIONALES

--INGRESOS
--DROP TABLE TMP_ESCPEP_VARS_INGRESOS ;
--CREATE TABLE TMP_ESCPEP_VARS_INGRESOS TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_VARS_INGRESOS;
INSERT INTO TMP_ESCPEP_VARS_INGRESOS
SELECT PERIODO, CODCLAVECICTARGET AS CODCLAVECIC,
SUM(CASE WHEN CANAL <> 'TTIB' THEN MTODOLARIZADO ELSE 0 END) AS MTO_TOTAL,
SUM(CASE WHEN FLGCASH = 1 THEN MTODOLARIZADO ELSE 0 END) AS MTO_CASH,
SUM(CASE WHEN CANAL = 'TTIB' THEN MTODOLARIZADO ELSE 0 END) AS MTO_TIB,
SUM(CASE WHEN CANAL = 'REMITTANCE' THEN MTODOLARIZADO ELSE 0 END) AS MTO_DEL_TTEE,
SUM(CASE WHEN FLGSOL_NOREL = 1 THEN MTODOLARIZADO ELSE 0 END) AS MTO_TERCEROS_NOREL,
SUM(CASE WHEN FLGSOL_EMPREL = 1 THEN MTODOLARIZADO ELSE 0 END) AS MTO_EMP_REL_NOPDH,
SUM(CASE WHEN FLGNP_SOL = 1 OR FLGLSB_SOL = 1 THEN 1 ELSE 0 END) AS CTD_INGR_TER_NP_LSB,
SUM(CASE WHEN FLGARCHIVONEGATIVO_SOL = 1 THEN 1 ELSE 0 END) AS CTD_INGR_TER_AN,
SUM(CASE WHEN FLG_MTO_MAYOR_10K = 1 THEN 1 ELSE 0 END) AS CTD_DEPO_10K,
SUM(CASE WHEN FLGSOL_NPLSB_REL = 1 THEN 1 ELSE 0 END) AS CTD_INGR_REL_NPLSP
FROM TMP_ESCPEP_TRXS_CON_MAS_VARS
WHERE TIPOINGRESOEGRESO = 'ING'
GROUP BY PERIODO, CODCLAVECICTARGET;

--EGRESOS
--DROP TABLE TMP_ESCPEP_VARS_EGRESOS;
--CREATE TABLE TMP_ESCPEP_VARS_EGRESOS TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_VARS_EGRESOS;
INSERT INTO TMP_ESCPEP_VARS_EGRESOS
SELECT PERIODO, CODCLAVECICSOURCE AS CODCLAVECIC,
SUM(CASE WHEN CANAL <> 'TTIB' THEN MTODOLARIZADO ELSE 0 END) AS MTO_EGRESO,
SUM(CASE WHEN CODTRANSACCION IN ('GIREXT','TRAEXT') THEN MTODOLARIZADO ELSE 0 END) AS MTO_AL_TTEE
FROM TMP_ESCPEP_TRXS
WHERE TIPOINGRESOEGRESO = 'EGR'
GROUP BY PERIODO, CODCLAVECICSOURCE;

TRUNCATE TABLE TMP_TRX_EPIC017_1;
INSERT INTO TMP_TRX_EPIC017_1
select
idtrx,
periodo,
numregistro,
codclavecicsource,
B.CODUNICOCLI AS CODUNICOCLISOURCE,
TRIM(B.APEPATCLI)||' '||TRIM(B.APEMATCLI)||' '||TRIM(B.NBRCLI) AS NOMBRESOURCE,
C.CODOPECTA AS CODOPECTASOURCE,
datosource,
paissource,
a.fecdia,
a.hortransaccion,
a.codmoneda,
mtotransaccion,
mtodolarizado,
codtransaccion,
tipotransaccion,
canal,
codclavecictarget,
D.CODUNICOCLI AS CODUNICOCLITARGET,
TRIM(D.APEPATCLI)||' '||TRIM(D.APEMATCLI)||' '||TRIM(D.NBRCLI)AS NOMBRETARGET,
E.CODOPECTA AS CODOPECTATARGET,
datotarget,
paistarget,
tipoingresoegreso from TMP_ESCPEP_TRXS_CON_MAS_VARS A
LEFT JOIN ODS_V.MD_CLIENTEG94 B ON A.codclavecicsource = B.CODCLAVECIC
LEFT JOIN ODS_V.MD_CUENTAG94 C ON A.codclaveopectasource = C.CODCLAVEOPECTA
LEFT JOIN ODS_V.MD_CLIENTEG94 D ON A.codclavecictarget = D.CODCLAVECIC
LEFT JOIN ODS_V.MD_CUENTAG94 E ON A.codclaveopectatarget = E.CODCLAVEOPECTA
where CANAL <> 'TTIB' and TIPOINGRESOEGRESO = 'ING' and
a.fecdia between TRUNC(ADD_MONTHS(SYSDATE, :INTERVALO_1),'MM') and TRUNC(LAST_DAY(ADD_MONTHS(SYSDATE,:INTERVALO_2)))
union
select idtrx,
periodo,
numregistro,
codclavecicsource,
B.CODUNICOCLI AS CODUNICOCLISOURCE,
TRIM(B.APEPATCLI)||' '||TRIM(B.APEMATCLI)||' '||TRIM(B.NBRCLI) AS NOMBRESOURCE,
C.CODOPECTA AS CODOPECTASOURCE,
datosource,
paissource,
a.fecdia,
a.hortransaccion,
a.codmoneda,
mtotransaccion,
mtodolarizado,
codtransaccion,
tipotransaccion,
canal,
codclavecictarget,
D.CODUNICOCLI AS CODUNICOCLITARGET,
TRIM(D.APEPATCLI)||' '||TRIM(D.APEMATCLI)||' '||TRIM(D.NBRCLI)AS NOMBRETARGET,
E.CODOPECTA AS CODOPECTATARGET,
datotarget,
paistarget,
tipoingresoegreso from TMP_ESCPEP_TRXS_CON_MAS_VARS A
LEFT JOIN ODS_V.MD_CLIENTEG94 B ON A.codclavecicsource = B.CODCLAVECIC
LEFT JOIN ODS_V.MD_CUENTAG94 C ON A.codclaveopectasource = C.CODCLAVEOPECTA
LEFT JOIN ODS_V.MD_CLIENTEG94 D ON A.codclavecictarget = D.CODCLAVECIC
LEFT JOIN ODS_V.MD_CUENTAG94 E ON A.codclaveopectatarget = E.CODCLAVEOPECTA
where CANAL = 'TTIB' and TIPOINGRESOEGRESO = 'ING' and
a.fecdia between TRUNC(ADD_MONTHS(SYSDATE, :INTERVALO_1),'MM') and TRUNC(LAST_DAY(ADD_MONTHS(SYSDATE,:INTERVALO_2)));

TRUNCATE table TMP_TRX_EPIC017_2;
INSERT INTO TMP_TRX_EPIC017_2
select idtrx,
periodo,
numregistro,
codclavecicsource,
B.CODUNICOCLI AS CODUNICOCLISOURCE,
TRIM(B.APEPATCLI)||' '||TRIM(B.APEMATCLI)||' '||TRIM(B.NBRCLI) AS NOMBRESOURCE,
C.CODOPECTA AS CODOPECTASOURCE,
datosource,
paissource,
A.fecdia,
A.hortransaccion,
A.codmoneda,
mtotransaccion,
mtodolarizado,
codtransaccion,
tipotransaccion,
canal,
codclavecictarget,
D.CODUNICOCLI AS CODUNICOCLITARGET,
TRIM(D.APEPATCLI)||' '||TRIM(D.APEMATCLI)||' '||TRIM(D.NBRCLI)AS NOMBRETARGET,
E.CODOPECTA AS CODOPECTATARGET,
datotarget,
paistarget,
tipoingresoegreso from TMP_ESCPEP_TRXS A
LEFT JOIN ODS_V.MD_CLIENTEG94 B ON A.codclavecicsource = B.CODCLAVECIC
LEFT JOIN ODS_V.MD_CUENTAG94 C ON A.codclaveopectasource = C.CODCLAVEOPECTA
LEFT JOIN ODS_V.MD_CLIENTEG94 D ON A.codclavecictarget = D.CODCLAVECIC
LEFT JOIN ODS_V.MD_CUENTAG94 E ON A.codclaveopectatarget = E.CODCLAVEOPECTA
where CANAL <> 'TTIB' and TIPOINGRESOEGRESO = 'EGR' and
A.fecdia between TRUNC(ADD_MONTHS(SYSDATE, :INTERVALO_1),'MM') and TRUNC(LAST_DAY(ADD_MONTHS(SYSDATE,:INTERVALO_2)));

--AGREGAR LAS VARIABLES DEMOGRAFICAS A LA TRANSACCIONALES

--DROP TABLE TMP_ESCPEP_PEPS_MES_AUX;
--CREATE TABLE TMP_ESCPEP_PEPS_MES_AUX TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_PEPS_MES_AUX;
INSERT INTO TMP_ESCPEP_PEPS_MES_AUX
SELECT A.PERIODO, C.*, CASE WHEN CTDROS > 1 THEN 1 ELSE 0 END AS FLG_ROS,
A.MTO_TOTAL,A.MTO_CASH,A.MTO_TIB,A.MTO_DEL_TTEE,A.MTO_TERCEROS_NOREL,A.MTO_EMP_REL_NOPDH,
CASE WHEN A.CTD_INGR_TER_NP_LSB > 0 THEN 1 ELSE 0 END AS FLG_INGR_TER_NP_LSB, CASE WHEN A.CTD_INGR_TER_AN > 0 THEN 1 ELSE 0 END AS FLG_INGR_TER_AN,A.CTD_DEPO_10K,CTD_INGR_REL_NPLSP,
CASE WHEN B.MTO_EGRESO IS NOT NULL THEN B.MTO_EGRESO ELSE 0 END MTO_EGRESO,
CASE WHEN B.MTO_AL_TTEE IS NOT NULL THEN B.MTO_AL_TTEE ELSE 0 END MTO_AL_TTEE
FROM TMP_ESCPEP_VARS_INGRESOS A
LEFT JOIN TMP_ESCPEP_VARS_EGRESOS B ON A.PERIODO = B.PERIODO AND A.CODCLAVECIC = B.CODCLAVECIC
LEFT JOIN TMP_ESCPEP_CTASNUEVAS C ON A.CODCLAVECIC = C.CODCLAVECIC;

--PERFIL TOTAL
--DROP TABLE TMP_ESCPEP_PERFI1;
--CREATE TABLE TMP_ESCPEP_PERFI1 TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_PERFI1;
INSERT INTO TMP_ESCPEP_PERFI1
SELECT  A.CODCLAVECIC,A.PERIODO AS NUMPERIODO,B.PERIODO,
MONTHS_BETWEEN(TO_DATE(A.PERIODO,'YYYYMM'),TO_DATE(B.PERIODO,'YYYYMM')) MESES,
CASE WHEN B.MTO_TOTAL IS NULL THEN 0 ELSE B.MTO_TOTAL END MTO_TOTAL,
CASE WHEN B.MTO_CASH IS NULL THEN 0 ELSE B.MTO_CASH END MTO_CASH,
CASE WHEN B.MTO_EGRESO IS NULL THEN 0 ELSE B.MTO_EGRESO END MTO_EGRESO,
CASE WHEN B.MTO_TOTAL + B.MTO_EGRESO IS NULL THEN 0 ELSE B.MTO_TOTAL + B.MTO_EGRESO END AS MTO_INGRESO_EGRESO,
CASE WHEN B.MTO_DEL_TTEE + B.MTO_AL_TTEE IS NULL THEN 0 ELSE B.MTO_DEL_TTEE + B.MTO_AL_TTEE END AS MTO_AL_DEL_TTEE--ACUM_MTO_DOLARIZADO
FROM TMP_ESCPEP_PEPS_MES_AUX A
INNER JOIN TMP_ESCPEP_PEPS_MES_AUX B ON (A.CODCLAVECIC=B.CODCLAVECIC);

--DROP TABLE TMP_ESCPEP_PERFI2;
--CREATE TABLE TMP_ESCPEP_PERFI2 TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_PERFI2;
INSERT INTO TMP_ESCPEP_PERFI2
SELECT NUMPERIODO,CODCLAVECIC,MTO_TOTAL,MTO_CASH,MTO_EGRESO,MTO_INGRESO_EGRESO,MTO_AL_DEL_TTEE
FROM TMP_ESCPEP_PERFI1 A
WHERE NUMPERIODO=PERIODO;

--DROP TABLE TMP_ESCPEP_PERFI3;
--CREATE TABLE TMP_ESCPEP_PERFI3 TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_PERFI3;
INSERT INTO TMP_ESCPEP_PERFI3
WITH TEMP_TAB AS(
  SELECT NUMPERIODO,CODCLAVECIC,
  AVG(NULLIF(MTO_TOTAL,0)) AS MEDIA_ING,STDDEV(NULLIF(MTO_TOTAL,0)) AS DESV_ING,
  AVG(NULLIF(MTO_CASH,0)) AS MEDIA_ING_CASH,STDDEV(NULLIF(MTO_CASH,0)) AS DESV_ING_CASH,
  AVG(NULLIF(MTO_EGRESO,0)) AS MEDIA_EGR,STDDEV(NULLIF(MTO_EGRESO,0)) AS DESV_EGR,
  AVG(NULLIF(MTO_INGRESO_EGRESO,0)) AS MEDIA_ING_EGR,STDDEV(NULLIF(MTO_INGRESO_EGRESO,0)) AS DESV_ING_EGR,
  AVG(NULLIF(MTO_AL_DEL_TTEE,0)) AS MEDIA_AL_DEL,STDDEV(NULLIF(MTO_AL_DEL_TTEE,0)) AS DESV_AL_DEL
  FROM TMP_ESCPEP_PERFI1
  WHERE MESES<=6 AND MESES>=1
  GROUP BY NUMPERIODO,CODCLAVECIC
) SELECT A.*,
  ROUND(NVL(B.MEDIA_ING,0),2) MEDIA_ING,ROUND(NVL(B.DESV_ING,0),2) DESV_ING,
  ROUND(NVL(B.MEDIA_ING_CASH,0),2) MEDIA_ING_CASH,ROUND(NVL(B.DESV_ING_CASH,0),2) DESV_ING_CASH,
  ROUND(NVL(B.MEDIA_EGR,0),2) MEDIA_EGR,ROUND(NVL(B.DESV_EGR,0),2) DESV_EGR,
  ROUND(NVL(B.MEDIA_ING_EGR,0),2) MEDIA_ING_EGR,ROUND(NVL(B.DESV_ING_EGR,0),2) DESV_ING_EGR,
  ROUND(NVL(B.MEDIA_AL_DEL,0),2) MEDIA_AL_DEL,ROUND(NVL(B.DESV_AL_DEL,0),2) DESV_AL_DEL
  FROM TMP_ESCPEP_PERFI2 A
  LEFT JOIN TEMP_TAB B ON (A.NUMPERIODO=B.NUMPERIODO AND A.CODCLAVECIC=B.CODCLAVECIC);

--FLG PERFIL COMPARANDO EL INGRESO DE LOS CANALES CONTRA LA HISTORIA DE INGRESOS DEL ESTIMADOR DE ING

--DROP TABLE TMP_ESCPEP_MTOS_EST_INGRESOS;
--CREATE TABLE TMP_ESCPEP_MTOS_EST_INGRESOS TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_MTOS_EST_INGRESOS;
INSERT INTO TMP_ESCPEP_MTOS_EST_INGRESOS
SELECT A.CODCLAVECIC,A.CODMES AS PERIODO,A.MTOMEJORINGRESOSOL
FROM ODS_V.HM_INGRESOCONSOLIDADOCLIENTEPN A
INNER JOIN TMP_ESCPEP_UNIVERSO B ON A.CODCLAVECIC = B.CODCLAVECIC
WHERE MTOMEJORINGRESOSOL IS NOT NULL AND CODMES BETWEEN TO_NUMBER(TO_CHAR(ADD_MONTHS(SYSDATE, :INTERVALO_3),'YYYYMM')) AND TO_NUMBER(TO_CHAR(LAST_DAY(ADD_MONTHS(SYSDATE,:INTERVALO_4)),'YYYYMM'));

--PERFIL TOTAL
--DROP TABLE TMP_ESCPEP_PERFI1_ESTING;
--CREATE TABLE TMP_ESCPEP_PERFI1_ESTING TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_PERFI1_ESTING;
INSERT INTO TMP_ESCPEP_PERFI1_ESTING
SELECT  A.CODCLAVECIC,A.PERIODO AS NUMPERIODO,B.PERIODO,
MONTHS_BETWEEN(TO_DATE(A.PERIODO,'YYYYMM'),TO_DATE(B.PERIODO,'YYYYMM')) MESES,
CASE WHEN B.MTOMEJORINGRESOSOL IS NULL THEN 0 ELSE B.MTOMEJORINGRESOSOL END MTOMEJORINGRESOSOL
FROM TMP_ESCPEP_MTOS_EST_INGRESOS A
INNER JOIN TMP_ESCPEP_MTOS_EST_INGRESOS B ON (A.CODCLAVECIC=B.CODCLAVECIC);

--DROP TABLE TMP_ESCPEP_PERFI2_ESTING;
--CREATE TABLE TMP_ESCPEP_PERFI2_ESTING TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_PERFI2_ESTING;
INSERT INTO TMP_ESCPEP_PERFI2_ESTING
SELECT NUMPERIODO,CODCLAVECIC,MTOMEJORINGRESOSOL
FROM TMP_ESCPEP_PERFI1_ESTING A
WHERE NUMPERIODO=PERIODO;

--DROP TABLE TMP_ESCPEP_PERFI3_ESTING;
--CREATE TABLE TMP_ESCPEP_PERFI3_ESTING TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_PERFI3_ESTING;
INSERT INTO TMP_ESCPEP_PERFI3_ESTING
WITH TEMP_TAB AS(
  SELECT NUMPERIODO,CODCLAVECIC,
  AVG(NULLIF(MTOMEJORINGRESOSOL,0)) AS MEDIA_EST_ING,STDDEV(NULLIF(MTOMEJORINGRESOSOL,0)) AS DESV_EST_ING
  FROM TMP_ESCPEP_PERFI1_ESTING
  WHERE MESES<=6 AND MESES>=1
  GROUP BY NUMPERIODO,CODCLAVECIC
) SELECT A.*,
  ROUND(NVL(B.MEDIA_EST_ING,0),2) MEDIA_EST_ING,ROUND(NVL(B.DESV_EST_ING,0),2) DESV_EST_ING
  FROM TMP_ESCPEP_PERFI2_ESTING A
  LEFT JOIN TEMP_TAB B ON (A.NUMPERIODO=B.NUMPERIODO AND A.CODCLAVECIC=B.CODCLAVECIC);

--TABLA FINAL

-- CREACI�N EL FLG PERFIL TOTAL EN TABLA CLIENTE MES
--DROP TABLE TMP_ESCPEP_PEPS_MES;
--CREATE TABLE TMP_ESCPEP_PEPS_MES TABLESPACE D_AML_99 AS
TRUNCATE TABLE TMP_ESCPEP_PEPS_MES;
INSERT INTO TMP_ESCPEP_PEPS_MES
SELECT  A.*,
CASE WHEN B.MEDIA_ING <> 0 AND B.DESV_ING <> 0 AND B.MEDIA_ING+3*B.DESV_ING<B.MTO_TOTAL THEN 1 ELSE 0 END FLG_PERFIL_INGTOTAL_3DS,
CASE WHEN B.MEDIA_ING_CASH <> 0 AND B.DESV_ING_CASH <> 0 AND B.MEDIA_ING_CASH+3*B.DESV_ING_CASH<B.MTO_CASH THEN 1 ELSE 0 END FLG_PERFIL_INGCASH_3DS,
CASE WHEN B.MEDIA_EGR <> 0 AND B.DESV_EGR <> 0 AND B.MEDIA_EGR+3*B.DESV_EGR<B.MTO_EGRESO THEN 1 ELSE 0 END FLG_PERFIL_EGR_3DS,
CASE WHEN B.MEDIA_ING_EGR <> 0 AND B.DESV_ING_EGR <> 0 AND B.MEDIA_ING_EGR+3*B.DESV_ING_EGR<B.MTO_INGRESO_EGRESO THEN 1 ELSE 0 END FLG_PERFIL_ING_EGR_3DS,
CASE WHEN B.MEDIA_AL_DEL <> 0 AND B.DESV_AL_DEL <> 0 AND B.MEDIA_AL_DEL+3*B.DESV_AL_DEL<B.MTO_AL_DEL_TTEE THEN 1 ELSE 0 END FLG_PERFIL_AL_DEL_TTEE_3DS,
CASE WHEN C.MEDIA_EST_ING <> 0 AND C.DESV_EST_ING <> 0 AND C.MEDIA_EST_ING+3*C.DESV_EST_ING<C.MTOMEJORINGRESOSOL THEN 1 ELSE 0 END FLG_PERFIL_INGR_VS_ESTIM
FROM   TMP_ESCPEP_PEPS_MES_AUX A
LEFT JOIN TMP_ESCPEP_PERFI3 B ON (A.PERIODO=B.NUMPERIODO AND A.CODCLAVECIC=B.CODCLAVECIC)
LEFT JOIN TMP_ESCPEP_PERFI3_ESTING C ON (A.PERIODO=C.NUMPERIODO AND A.CODCLAVECIC=C.CODCLAVECIC)
WHERE PERIODO = TO_NUMBER(TO_CHAR(ADD_MONTHS(SYSDATE, -1),'YYYYMM'));

SPOOL OFF
QUIT;