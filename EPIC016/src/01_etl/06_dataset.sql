--PARAMETRO DE CREDENCIALES
@&1

SET ECHO ON
WHENEVER SQLERROR EXIT SQL.SQLCODE
ALTER SESSION DISABLE PARALLEL QUERY;

TRUNCATE TABLE TMP_CONOCMCDO_VAR1;
INSERT INTO TMP_CONOCMCDO_VAR1
CREATE TABLE TMP_CONOCMCDO_VAR1 AS
  SELECT
    A.CODCLAVECIC_BEN   AS CODCLAVECIC,
    TO_NUMBER(TO_CHAR(A.FECDIA, 'YYYYMM'))          NUMPERIODO,
    SUM(MTO_DOLARIZADO) AS MTO_INGRESOS
  FROM TMP_CONOCMCDO_UNIVTRX A
  GROUP BY A.CODCLAVECIC_BEN, TO_CHAR(A.FECDIA, 'YYYYMM');

TRUNCATE TABLE TMP_CONOCMCDO_VAR2;
INSERT INTO TMP_CONOCMCDO_VAR2
CREATE TABLE TMP_CONOCMCDO_VAR2 AS
SELECT
  A.*,
  COALESCE(ROUND(B.MTO_INGRESOS,2),0) AS MTO_INGRESOS
FROM TMP_CONOCMCDO_UNIPREV03 A
LEFT JOIN TMP_CONOCMCDO_VAR1 B ON A.CODCLAVECIC=B.CODCLAVECIC AND A.NUMPERIODO=B.NUMPERIODO
ORDER BY A.CODCLAVECIC, A.NUMPERIODO;

TRUNCATE TABLE TMP_CONOCMCDO_VAR3;
INSERT INTO TMP_CONOCMCDO_VAR3 
CREATE TABLE TMP_CONOCMCDO_VAR3 AS
WITH TMP AS (
  SELECT A.CODCLAVECIC_BEN AS CODCLAVECIC,
  TO_NUMBER(TO_CHAR(A.FECDIA, 'YYYYMM')) NUMPERIODO,
  SUM(MTO_DOLARIZADO) AS MTO_INGRESOSCASH 
  FROM TMP_CONOCMCDO_MOVCASH A 
  GROUP BY A.CODCLAVECIC_BEN,
  TO_CHAR(A.FECDIA, 'YYYYMM')
)
  SELECT
    A.*,
    CASE
      WHEN A.MTO_INGRESOS=0 THEN
        0
      ELSE
        ROUND(COALESCE(B.MTO_INGRESOSCASH, 0)/A.MTO_INGRESOS, 2)
    END                 AS POR_CASH
  FROM
    TMP_CONOCMCDO_VAR2    A
    LEFT JOIN TMP B
    ON A.CODCLAVECIC=B.CODCLAVECIC
    AND A.NUMPERIODO=B.NUMPERIODO;

--PERFIL TOTAL
TRUNCATE TABLE TMP_CONOCMCDO_PERFI1;
INSERT INTO TMP_CONOCMCDO_PERFI1 
CREATE TABLE TMP_CONOCMCDO_PERFI1 AS
WITH TEMP_TAB AS (
  SELECT CODCLAVECIC_BEN,
  TO_CHAR(FECDIA, 'YYYYMM') PERIODO,
  SUM(MTO_DOLARIZADO) ACUM_MTO_DOLARIZADO FROM TMP_CONOCMCDO_UNIVTRX GROUP BY CODCLAVECIC_BEN,
  TO_CHAR(FECDIA, 'YYYYMM')
)
  SELECT
    A.CODCLAVECIC,
    A.NUMPERIODO,
    B.PERIODO,
    MONTHS_BETWEEN(TO_DATE(A.NUMPERIODO,'YYYYMM'),
    TO_DATE(B.PERIODO,'YYYYMM')) MESES,
    B.ACUM_MTO_DOLARIZADO
  FROM
    TMP_CONOCMCDO_VAR3 A
    INNER JOIN TEMP_TAB B
    ON (A.CODCLAVECIC=B.CODCLAVECIC_BEN);

TRUNCATE TABLE TMP_CONOCMCDO_PERFI2;
INSERT INTO TMP_CONOCMCDO_PERFI2
CREATE TABLE TMP_CONOCMCDO_PERFI2 AS
  SELECT
    NUMPERIODO,
    CODCLAVECIC,
    ACUM_MTO_DOLARIZADO
  FROM
    TMP_CONOCMCDO_PERFI1 A
  WHERE
    NUMPERIODO=PERIODO;

TRUNCATE TABLE TMP_CONOCMCDO_PERFI3;
INSERT INTO TMP_CONOCMCDO_PERFI3 
CREATE TABLE TMP_CONOCMCDO_PERFI3 AS
WITH TEMP_TAB AS (
  SELECT NUMPERIODO,
  CODCLAVECIC,
  AVG(NULLIF(ACUM_MTO_DOLARIZADO, 0)) MEDIA_DEP,
  STDDEV(NULLIF(ACUM_MTO_DOLARIZADO, 0)) DESV_DEP FROM TMP_CONOCMCDO_PERFI1 WHERE MESES<=6 AND MESES>=1 GROUP BY NUMPERIODO,
  CODCLAVECIC
)
  SELECT
    A.*,
    ROUND(NVL(B.MEDIA_DEP,0),2)  MEDIA_DEP,
    ROUND(NVL(B.DESV_DEP,0),2)  DESV_DEP
  FROM
    TMP_CONOCMCDO_PERFI2 A
    LEFT JOIN TEMP_TAB B
    ON (A.NUMPERIODO=B.NUMPERIODO
    AND A.CODCLAVECIC=B.CODCLAVECIC);

--creamos el flg perfil total
TRUNCATE TABLE TMP_CONOCMCDO_VAR4;
INSERT INTO TMP_CONOCMCDO_VAR4
CREATE TABLE TMP_CONOCMCDO_VAR4 AS
  SELECT
    A.*,
    CASE
      WHEN (B.MEDIA_DEP+3*B.DESV_DEP<B.ACUM_MTO_DOLARIZADO) OR (B.MEDIA_DEP=0
      AND B.DESV_DEP=0) OR (B.MEDIA_DEP>0 AND B.DESV_DEP=0 AND B.MEDIA_DEP*1.9<B.ACUM_MTO_DOLARIZADO) THEN 1 ELSE 0
    END FLG_PERFIL_3DESVT_TRX,
    B.MEDIA_DEP,
    B.DESV_DEP
  FROM
    TMP_CONOCMCDO_VAR3   A
    LEFT JOIN TMP_CONOCMCDO_PERFI3 B
    ON (A.NUMPERIODO=B.NUMPERIODO
    AND A.CODCLAVECIC=B.CODCLAVECIC);

--FLAG SI EL BENEFICIARIO RECIBE DINERO DE ALGUIEN QUE ESTA EN AN
TRUNCATE TABLE TMP_CONOCMCDO_VAR5;
INSERT INTO TMP_CONOCMCDO_VAR5 
CREATE TABLE TMP_CONOCMCDO_VAR5 AS
WITH TMP AS (
  SELECT CODCLAVECIC,
  MIN(FECREGISTRODETALLENEGATIVO) FECREGISTRO_AN FROM ODS_V.MD_MOTIVODETALLECLINEGATIVO WHERE TIPMOTIVONEGATIVO='013' AND --M1 - Cumplimiento
  TIPDETALLEMOTIVONEGATIVO='001' GROUP BY CODCLAVECIC
),
TMP2 AS (
  SELECT DISTINCT A.CODCLAVECIC_SOL,
  A.CODCLAVECIC_BEN,
  A.FECDIA,
  CASE WHEN B.FECREGISTRO_AN IS NULL OR A.FECDIA-B.FECREGISTRO_AN<0 THEN 0 ELSE 1 END FLG_AN FROM TMP_CONOCMCDO_UNIVTRX A LEFT JOIN TMP B ON A.CODCLAVECIC_SOL=B.CODCLAVECIC
),
TMP3 AS (
  SELECT CODCLAVECIC_BEN AS CODCLAVECIC,
  TO_NUMBER(TO_CHAR(FECDIA, 'YYYYMM')) NUMPERIODO,
  SUM(FLG_AN) FLG_AN FROM TMP2 GROUP BY CODCLAVECIC_BEN,
  TO_CHAR(FECDIA, 'YYYYMM')
)
  SELECT
    A.*,
    CASE
      WHEN B.FLG_AN IS NULL THEN
        0
      WHEN B.FLG_AN>0 THEN
        1
      ELSE
        0
    END FLG_AN
  FROM
    TMP_CONOCMCDO_VAR4    A
    LEFT JOIN TMP3 B
    ON A.CODCLAVECIC=B.CODCLAVECIC
    AND A.NUMPERIODO=B.NUMPERIODO;

--FLAG SI EL BENEFICIARIO RECIBE DINERO DE ALGUIEN QUE ESTA EN NP
TRUNCATE TABLE TMP_CONOCMCDO_VAR6;
INSERT INTO TMP_CONOCMCDO_VAR6 
CREATE TABLE TMP_CONOCMCDO_VAR6 AS
WITH TMP AS (
  SELECT CODUNICOCLI,
  MIN(TO_CHAR(FECREGISTRO, 'DD/MM/YYYY')) FECGENERACION_NP FROM S61751.SAPY_DMALERTA WHERE IDORIGEN=2 GROUP BY CODUNICOCLI
),
TMP2 AS (
  SELECT DISTINCT A.CODCLAVECIC_SOL,
  B.CODUNICOCLI FROM TMP_CONOCMCDO_UNIVTRX A LEFT JOIN ODS_V.MD_CLIENTE B ON A.CODCLAVECIC_SOL=B.CODCLAVECIC
),
TMP3 AS (
  SELECT DISTINCT A.CODCLAVECIC_SOL,
  A.CODCLAVECIC_BEN,
  A.FECDIA,
  CASE WHEN C.FECGENERACION_NP IS NULL OR A.FECDIA-TO_DATE(C.FECGENERACION_NP, 'DD/MM/YYYY')<0 THEN 0 ELSE 1 END FLG_NP FROM TMP_CONOCMCDO_UNIVTRX A LEFT JOIN TMP2 B ON A.CODCLAVECIC_SOL=B.CODCLAVECIC_SOL LEFT JOIN TMP C ON B.CODUNICOCLI=C.CODUNICOCLI
),
TMP4 AS (
  SELECT CODCLAVECIC_BEN AS CODCLAVECIC,
  TO_NUMBER(TO_CHAR(FECDIA, 'YYYYMM')) NUMPERIODO,
  SUM(FLG_NP) FLG_NP FROM TMP3 GROUP BY CODCLAVECIC_BEN,
  TO_CHAR(FECDIA, 'YYYYMM')
)
  SELECT
    A.*,
    CASE
      WHEN B.FLG_NP IS NULL THEN
        0
      WHEN B.FLG_NP>0 THEN
        1
      ELSE
        0
    END             FLG_NP
  FROM
    TMP_CONOCMCDO_VAR5    A
    LEFT JOIN TMP4 B
    ON A.CODCLAVECIC=B.CODCLAVECIC
    AND A.NUMPERIODO=B.NUMPERIODO;

--FLAG SI EL BENEFICIARIO RECIBE DINERO DE ALGUIEN QUE ESTA EN LSB
TRUNCATE TABLE TMP_CONOCMCDO_VAR7;
INSERT INTO TMP_CONOCMCDO_VAR7 
CREATE TABLE TMP_CONOCMCDO_VAR7 AS
WITH TMP AS (
  SELECT CODUNICOCLI,
  MIN(TO_CHAR(FECREGISTRO, 'DD/MM/YYYY')) FECGENERACION_LSB FROM S61751.SAPY_DMALERTA WHERE IDORIGEN=29 GROUP BY CODUNICOCLI
),
TMP2 AS (
  SELECT DISTINCT A.CODCLAVECIC_SOL,
  B.CODUNICOCLI FROM TMP_CONOCMCDO_UNIVTRX A LEFT JOIN ODS_V.MD_CLIENTE B ON A.CODCLAVECIC_SOL=B.CODCLAVECIC
),
TMP3 AS (
  SELECT DISTINCT A.CODCLAVECIC_SOL,
  A.CODCLAVECIC_BEN,
  A.FECDIA,
  CASE WHEN C.FECGENERACION_LSB IS NULL OR A.FECDIA-TO_DATE(C.FECGENERACION_LSB, 'DD/MM/YYYY')<0 THEN 0 ELSE 1 END FLG_LSB FROM TMP_CONOCMCDO_UNIVTRX A LEFT JOIN TMP2 B ON A.CODCLAVECIC_SOL=B.CODCLAVECIC_SOL LEFT JOIN TMP C ON B.CODUNICOCLI=C.CODUNICOCLI
),
TMP4 AS (
  SELECT CODCLAVECIC_BEN AS CODCLAVECIC,
  TO_NUMBER(TO_CHAR(FECDIA, 'YYYYMM')) NUMPERIODO,
  SUM(FLG_LSB) FLG_LSB FROM TMP3 GROUP BY CODCLAVECIC_BEN,
  TO_CHAR(FECDIA, 'YYYYMM')
)
  SELECT
    A.*,
    CASE
      WHEN B.FLG_LSB IS NULL THEN
        0
      WHEN B.FLG_LSB>0 THEN
        1
      ELSE
        0
    END FLG_LSB
  FROM
    TMP_CONOCMCDO_VAR6    A
    LEFT JOIN TMP4 B
    ON A.CODCLAVECIC=B.CODCLAVECIC
    AND A.NUMPERIODO=B.NUMPERIODO;

TRUNCATE TABLE TMP_CONOCMCDO_VAR8;
INSERT INTO TMP_CONOCMCDO_VAR8
CREATE TABLE TMP_CONOCMCDO_VAR8 AS
  SELECT
    NUMPERIODO,
    CODCLAVECIC,
    TIPPER_AGRUP,
    MTO_INGRESOS,
    POR_CASH,
    FLG_PERFIL_3DESVT_TRX,
    FLG_AN,
    MEDIA_DEP,
    DESV_DEP,
    CASE
      WHEN FLG_NP=1 OR FLG_LSB=1 THEN
        1
      ELSE
        0
    END FLG_LSB_NP
  FROM
    TMP_CONOCMCDO_VAR7;

TRUNCATE TABLE TMP_CONOCMCDO_EGRESOS;
INSERT INTO TMP_CONOCMCDO_EGRESOS 
CREATE TABLE TMP_CONOCMCDO_EGRESOS AS
WITH TMP AS (
 --AGENTE
  SELECT CODCLAVECIC_SOL,
  FECDIA,
  MTO_DOLARIZADO FROM TMP_CONOCMCDO_TRX_AGENTE_2 UNION ALL
 --VENTANILLA
  SELECT CODCLAVECIC_SOL,
  FECDIA,
  MTO_DOLARIZADO FROM TMP_CONOCMCDO_TRX_VENTANILLA_2 UNION ALL
 --TRANSFERENCIAS DEL EXTERIOR (REMESAS)
  SELECT CODCLAVECIC_SOL,
  FECDIA,
  MTO_DOLARIZADO FROM TMP_CONOCMCDO_TRX_BANNI_2 UNION ALL
 --CAJERO
  SELECT CODCLAVECIC_SOL,
  FECDIA,
  MTO_DOLARIZADO FROM TMP_CONOCMCDO_TRX_CAJERO UNION ALL
 --BANCA MOVIL
  SELECT CODCLAVECIC_SOL,
  FECDIA,
  MTO_DOLARIZADO FROM TMP_CONOCMCDO_TRX_BANCAMOVIL UNION ALL
 --TELECREDITO
  SELECT CODCLAVECIC_SOL,
  FECDIA,
  MTO_DOLARIZADO FROM TMP_CONOCMCDO_TRX_TELCRE UNION ALL
 --HOMEBANKING
  SELECT CODCLAVECIC_SOL,
  FECDIA,
  MTO_DOLARIZADO FROM TMP_CONOCMCDO_TRX_HM_2 UNION ALL
 --GGTT
  SELECT CODCLAVECIC_SOL,
  FECDIA,
  MTO_DOLARIZADO FROM TMP_CONOCMCDO_TRX_GGTT_2
)
  SELECT
    A.CODCLAVECIC_SOL   AS CODCLAVECIC,
    TO_NUMBER(TO_CHAR(A.FECDIA, 'YYYYMM'))          NUMPERIODO,
    SUM(MTO_DOLARIZADO) AS MTO_EGRESOS
  FROM
    TMP A
  GROUP BY
    A.CODCLAVECIC_SOL,
    TO_CHAR(A.FECDIA, 'YYYYMM');

TRUNCATE TABLE TMP_CONOCMCDO_VAR9;
INSERT INTO TMP_CONOCMCDO_VAR9 
CREATE TABLE TMP_CONOCMCDO_VAR9 AS
WITH TMP AS (
  SELECT A.NUMPERIODO,
  A.CODCLAVECIC,
  A.TIPPER_AGRUP,
  A.MTO_INGRESOS,
  COALESCE(ROUND(B.MTO_EGRESOS, 2), 0 ) MTO_EGRESOS,
  CASE WHEN (ROUND(B.MTO_EGRESOS, 2)+A.MTO_INGRESOS) IS NULL OR (ROUND(B.MTO_EGRESOS, 2)+A.MTO_INGRESOS)=0 THEN 0 ELSE ROUND(A.MTO_INGRESOS/(ROUND(B.MTO_EGRESOS, 2)+A.MTO_INGRESOS), 2) END RATIO_ING_TOT,
  A.POR_CASH,
  A.FLG_PERFIL_3DESVT_TRX,
  A.FLG_AN,
  A.FLG_LSB_NP,
  ROUND(A.MEDIA_DEP, 2) MEDIA_DEP,
  ROUND(A.DESV_DEP, 2) DESV_DEP FROM TMP_CONOCMCDO_VAR8 A LEFT JOIN TMP_CONOCMCDO_EGRESOS B ON A.CODCLAVECIC=B.CODCLAVECIC AND A.NUMPERIODO=B.NUMPERIODO
)
  SELECT
    *
  FROM
    TMP
  WHERE
    MTO_INGRESOS>1000;

--NUMPERIODO=TO_CHAR(TRUNC(LAST_DAY(ADD_MONTHS(SYSDATE,-1))),'YYYYMM');
QUIT;